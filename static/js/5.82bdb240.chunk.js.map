{"version":3,"sources":["utils/translateTextHelpers.ts","hooks/useI18n.ts","views/Ifos/components/Hero.tsx","config/constants/ifo.ts","config/constants/index.ts","hooks/useWeb3.ts","hooks/useContract.ts","components/UnlockButton.tsx","utils/formatBalance.ts","hooks/useBlock.ts","views/Ifos/components/IfoCard/IfoCardHeader.tsx","views/Ifos/components/IfoCard/IfoCardDetails.tsx","views/Ifos/components/IfoCard/LabelButton.tsx","components/Input/Input.tsx","components/Input/BalanceInput.tsx","views/Ifos/components/IfoCard/ContributeModal.tsx","views/Ifos/components/IfoCard/IfoCardContribute.tsx","views/Ifos/components/IfoCard/IfoCardProgress.tsx","utils/getTimePeriods.ts","views/Ifos/components/IfoCard/IfoCardTime.tsx","views/Ifos/components/IfoCard/index.tsx","views/Ifos/components/Title.tsx","views/Ifos/components/IfoCards.tsx","views/Ifos/CurrentIfo.tsx","views/Ifos/index.tsx"],"names":["variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","find","translation","data","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","useContext","TranslationsContext","length","styled","Heading","attrs","as","size","theme","colors","secondary","StyledHero","div","StyledMobileImage","img","mediaQueries","md","StyledDesktopImage","Hero","Container","src","alt","ifos","id","address","56","97","isActive","name","token","subTitle","description","saleAmount","projectSiteUrl","currency","currencyAddress","tokenDecimals","maxContribution","minContribution","farmsConfig","filter","farm","isCommunity","map","tokenSymbol","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","useWeb3","ethereum","useWallet","refEth","useRef","useState","web3","setweb3","useEffect","current","useContract","abi","contractOptions","eth","Contract","contract","setContract","UnlockButton","props","TranslateString","connect","reset","onPresentConnectModal","useWalletModal","onClick","getBalanceNumber","balance","decimals","displayBalance","BigNumber","dividedBy","pow","toNumber","getFullDisplayBalance","toFixed","useBlock","BlockContext","StyledIfoCardHeader","Flex","Name","Description","Text","textSubtle","TitleSection","IfoCardHeader","ifoId","mb","alignItems","width","height","StyledIfoCardDetails","Item","Display","IfoCardDetails","bold","href","style","margin","ButtonWrapper","LabelButton","value","label","buttonLabel","disabled","fontSize","color","StyledInputWrapper","input","radii","default","spacing","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","BalanceInput","max","symbol","onSelectMax","console","log","marginRight","toLocaleString","ContributeModal","onDismiss","setValue","pendingTx","setPendingTx","account","_address","title","e","currentTarget","toString","justifyContent","fullWidth","variant","mr","a","sendTransaction","from","to","times","IfoCardContribute","status","raisingAmount","softCapReached","finalized","contributions","setContributions","claimedTokens","setClaimedTokens","refundedTokens","setRefundedTokens","tokensPerBnb","setTokensPerBnb","useModal","onPresentContributeModal","methods","call","refunds","fetch","claim","claimTokens","send","refund","claimRefund","isFinished","percentOfUserContribution","userClaimed","isGreaterThan","userRefunded","claimableTokens","StyledProgress","IfoCardProgress","progress","primaryStep","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","Details","Countdown","IfoCardTime","isLoading","secondsUntilStart","secondsUntilEnd","countdownToUse","timeUntil","suffix","StyledIfoCard","Card","ActionWrapper","StyledLinearProgress","withStyles","barColorPrimary","backgroundColor","bar2Buffer","dashedColorPrimary","backgroundImage","root","borderRadius","padding","LinearProgress","getStatus","currentTime","startTime","endTime","IfoCard","ifo","blocksRemaining","endBlockNum","hardCap","hardCapProgress","isOpen","softCap","softCapProgress","startBlockNum","weiRaised","state","setState","presaleContract","process","ido","currentBlock","Ribbon","variantColor","getRibbonComponent","Promise","all","parseInt","round","Date","now","fetchProgress","ribbon","mt","valueBuffer","totalAmount","Title","IfoCardWrapper","isSingle","defaultProps","LaunchIfoCallout","List","ul","Wrapper","xs","lg","activeIfo","CardBody","ifosConfig","ActiveIfo","IfoCards","Ifos","path","useRouteMatch","exact","CurrentIfo"],"mappings":"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","file":"static/js/5.82bdb240.chunk.js","sourcesContent":["import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\nimport Container from 'components/layout/Container'\nimport useI18n from 'hooks/useI18n'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 24px;\n  text-align: center;\n`\n\nconst StyledHero = styled.div`\n  padding-bottom: 40px;\n  padding-top: 40px;\n`\n\nconst StyledMobileImage = styled.img`\n  display: block;\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n  border-radius: 10px;\n`\n\nconst StyledDesktopImage = styled.img`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n  border-radius: 10px;\n`\n\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <Container>\n        <StyledMobileImage src=\"/images/ifos/banner-mobile.jpg\" alt=\"banner\" />\n        <StyledDesktopImage src=\"/images/ifos/banner.jpg\" alt=\"banner\" />\n      </Container>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import { Ifo } from './types'\n\nconst ifos: Ifo[] = [\n  {\n    id: 'infinity',\n    address: {\n      // 56: '0x7A73ABeab22BB6A9C6a579f5356E977E61d4EFd0', presale contract address\n      56: '0xD46a71B3259bED58829c050E17458E50B7ED93Ff',\n      97: '0x8E3Be059992dee2a668902EED64bac9Bab134071',\n    },\n    isActive: true,\n    name: 'Infinity',\n    token: 'INFINITY',\n    subTitle: 'Infinity is the best token.',\n    description: 'Infinity token will bring all rich man.',\n    saleAmount: '10000',\n    projectSiteUrl: 'https://infinityfinance.com/',\n    currency: 'BNB',\n    // currencyAddress: '0xb37bb601005cd5c2fcd4ea526dba0f67f28f7c6b', token address\n    currencyAddress: '0xb6cc0bb448adD423dcfBAf9242844fA723D8875A',\n    tokenDecimals: 18,\n    maxContribution: '12',\n    minContribution: '1',\n  },\n]\n\nexport default ifos\n","import farmsConfig from './farms'\n\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\n\nexport { farmsConfig, communityFarms }\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { provider as ProviderType } from 'web3-core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the ethereum provider change\n */\nconst useWeb3 = () => {\n  const { ethereum }: { ethereum: ProviderType } = useWallet()\n  const refEth = useRef(ethereum)\n  const [web3, setweb3] = useState(new Web3(ethereum || httpProvider))\n\n  useEffect(() => {\n    if (ethereum !== refEth.current) {\n      setweb3(new Web3(ethereum || httpProvider))\n      refEth.current = ethereum\n    }\n  }, [ethereum])\n\n  return web3\n}\n\nexport default useWeb3\n","import { useEffect, useState } from 'react'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport useWeb3 from 'hooks/useWeb3'\nimport { getMasterChefAddress, getCakeAddress, getLotteryAddress, getLotteryTicketAddress } from 'utils/addressHelpers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport ifo from 'config/abi/ifo.json'\nimport ido from 'config/abi/ido.json'\nimport erc20 from 'config/abi/erc20.json'\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\nimport pancakeRabbits from 'config/abi/pancakeRabbits.json'\nimport lottery from 'config/abi/lottery.json'\nimport lotteryTicket from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\n\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\n  const web3 = useWeb3()\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\n\n  useEffect(() => {\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\n  }, [abi, address, contractOptions, web3])\n\n  return contract\n}\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const ifoAbi = (ifo as unknown) as AbiItem\n  return useContract(ifoAbi, address)\n}\n\nexport const useIdoContract = (address: string) => {\n  const idoAbi = (ido as unknown) as AbiItem\n  return useContract(idoAbi, address)\n}\n\nexport const useERC20 = (address: string) => {\n  const erc20Abi = (erc20 as unknown) as AbiItem\n  return useContract(erc20Abi, address)\n}\n\nexport const useCake = () => {\n  return useERC20(getCakeAddress())\n}\n\nexport const useRabbitMintingFarm = (address: string) => {\n  const rabbitMintingFarmAbi = (rabbitmintingfarm as unknown) as AbiItem\n  return useContract(rabbitMintingFarmAbi, address)\n}\n\nexport const usePancakeRabbits = (address: string) => {\n  const pancakeRabbitsAbi = (pancakeRabbits as unknown) as AbiItem\n  return useContract(pancakeRabbitsAbi, address)\n}\n\nexport const useLottery = () => {\n  const abi = (lottery as unknown) as AbiItem\n  return useContract(abi, getLotteryAddress())\n}\n\nexport const useLotteryTicket = () => {\n  const abi = (lotteryTicket as unknown) as AbiItem\n  return useContract(abi, getLotteryTicketAddress())\n}\n\nexport const useMasterchef = () => {\n  const abi = (masterChef as unknown) as AbiItem\n  return useContract(abi, getMasterChefAddress())\n}\n\nexport const useSousChef = (id) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const rawAbi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  const abi = (rawAbi as unknown) as AbiItem\n  return useContract(abi, config.contractAddress[process.env.REACT_APP_CHAIN_ID])\n}\n\nexport default useContract\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, Flex } from '@pancakeswap-libs/uikit'\n\ninterface IfoCardHeaderProps {\n  ifoId: string\n  name: string\n  subTitle: string\n}\n\nconst StyledIfoCardHeader = styled(Flex)`\n  & > div {\n    flex: 1;\n  }\n  margin-top: 48px;\n`\n\nconst Name = styled(Heading).attrs({ as: 'h3', size: 'lg' })`\n  margin-bottom: 4px;\n  text-align: left;\n  margin-left: 10px;\n`\n\nconst Description = styled(Text)`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  text-align: left;\n  margin-left: 10px;\n`\n\nconst TitleSection = styled.div`\n  margin-left: 20px;\n`\n\nconst IfoCardHeader: React.FC<IfoCardHeaderProps> = ({ ifoId, name, subTitle }) => (\n  <StyledIfoCardHeader mb=\"24px\" alignItems=\"center\">\n    <img src={`/images/ifos/${ifoId}.png`} alt={ifoId} width=\"120px\" height=\"80px\" />\n    <TitleSection>\n      <Name>{name}</Name>\n      <Description>{subTitle}</Description>\n    </TitleSection>\n  </StyledIfoCardHeader>\n)\n\nexport default IfoCardHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, LinkExternal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardDetailsProps {\n  saleAmount: string\n  projectSiteUrl: string\n  raisingAmount: BigNumber\n  totalAmount: BigNumber\n  token: string\n  currency: string\n  maxContribution: string\n  minContribution: string\n}\n\nconst StyledIfoCardDetails = styled.div`\n  margin: 24px 0px;\n`\n\nconst Item = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.secondary};\n  display: flex;\n  margin-top: 16px;\n`\n\nconst Display = styled(Text)`\n  flex: 1;\n`\n\nconst IfoCardDetails: React.FC<IfoCardDetailsProps> = ({\n  saleAmount,\n  token,\n  currency,\n  projectSiteUrl,\n  maxContribution,\n  minContribution,\n}) => {\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <StyledIfoCardDetails>\n        <Item>\n          <Display>For Sale</Display>\n          <Text bold>\n            2250 INFINITY\n          </Text>\n        </Item>\n        <Item>\n          <Display>Max contribution</Display>\n          <Text bold>\n            {maxContribution} {currency}\n          </Text>\n        </Item>\n        <Item>\n          <Display>Min contribution</Display>\n          <Text bold>\n            {minContribution} {currency}\n          </Text>\n        </Item>\n      </StyledIfoCardDetails>\n      <LinkExternal href={projectSiteUrl} style={{ margin: 'auto' }}>\n        {TranslateString(412, 'View project site')}\n      </LinkExternal>\n    </>\n  )\n}\n\nexport default IfoCardDetails\n","import React, { ButtonHTMLAttributes } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text } from '@pancakeswap-libs/uikit'\n\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\n  value: string\n  label?: string\n  buttonLabel: string\n  disabled?: boolean\n}\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: solid 1px;\n  border-radius: 0px;\n  padding-left: 16px;\n  margin: 10px 0px;\n`\n\nconst LabelButton: React.FC<Props> = ({ value, label, buttonLabel, onClick, disabled = false }) => {\n  return (\n    <div>\n      {label && (\n        <Text fontSize=\"14px\" color=\"primary\">\n          {label}\n        </Text>\n      )}\n      <ButtonWrapper>\n        <Text bold fontSize=\"20px\">\n          {value}\n        </Text>\n        <Button onClick={onClick} disabled={disabled}>\n          {buttonLabel}\n        </Button>\n      </ButtonWrapper>\n    </div>\n  )\n}\n\nexport default LabelButton\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Input, { InputProps } from './Input'\n\ninterface Props extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n}\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nconst BalanceInput: React.FC<Props> = ({ max, symbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n  console.log('alex: balacne input ', symbol);\n  return (\n    <div>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n            <img alt=\"BNB logo\" src=\"/images/BNB.png\" width=\"24px\" style={{ marginRight: '8px' }} />\n            </div>\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      <StyledMaxText>{TranslateString(999, `${max.toLocaleString()} ${symbol} Available`)}</StyledMaxText>\n    </div>\n  )\n}\n\nexport default BalanceInput\n","import React, { useState } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { Modal, Button, Flex, LinkExternal } from '@pancakeswap-libs/uikit'\nimport BalanceInput from 'components/Input/BalanceInput'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useWeb3 from 'hooks/useWeb3'\n\ninterface Props {\n  currency: string\n  contract: any\n  currencyAddress?: string\n  onDismiss?: () => void\n}\n\nconst ContributeModal: React.FC<Props> = ({ currency, contract, onDismiss }) => {\n  const [value, setValue] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account, balance } = useWallet()\n  const web3 = useWeb3()\n  console.log('alex: ifo balance: ', balance)\n  console.log('alex: ifo currency: ', currency)\n  console.log('alex: ifo contract._address: ', contract._address)\n  return (\n    <Modal title={`Contribute ${currency}`} onDismiss={onDismiss}>\n      <BalanceInput\n        value={value}\n        onChange={(e) => setValue(e.currentTarget.value)}\n        symbol={currency}\n        max={getFullDisplayBalance(new BigNumber(balance))}\n        onSelectMax={() => setValue(new BigNumber(balance).div(new BigNumber(10).pow(18)).toString())}\n      />\n      <Flex justifyContent=\"space-between\" mb=\"24px\">\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss} mr=\"8px\">\n          Cancel\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await web3.eth.sendTransaction({\n              from: account,\n              to: contract._address,\n              value: new BigNumber(value).times(new BigNumber(10).pow(18)).toString(),\n            })\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          Confirm\n        </Button>\n      </Flex>\n      <LinkExternal\n        href=\"https://exchange.pancakeswap.finance/#/add/ETH/0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\"\n        style={{ margin: 'auto' }}\n      >\n        {`Get ${currency}`}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default ContributeModal\n","import React, { useState, useEffect } from 'react'\nimport { useModal, Text } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { Contract } from 'web3-eth-contract'\nimport { IfoStatus } from 'config/constants/types'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport LabelButton from './LabelButton'\nimport ContributeModal from './ContributeModal'\n\nexport interface Props {\n  address: string\n  currency: string\n  currencyAddress: string\n  contract: Contract\n  status: IfoStatus\n  raisingAmount: BigNumber\n  softCapReached: boolean\n  finalized: boolean\n}\n\nconst IfoCardContribute: React.FC<Props> = ({\n  currency,\n  currencyAddress,\n  contract,\n  status,\n  raisingAmount,\n  softCapReached,\n  finalized,\n}) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const [contributions, setContributions] = useState(new BigNumber(0))\n  const [claimedTokens, setClaimedTokens] = useState(new BigNumber(0))\n  const [refundedTokens, setRefundedTokens] = useState(new BigNumber(0))\n  const [tokensPerBnb, setTokensPerBnb] = useState(new BigNumber(0))\n\n  const { account } = useWallet()\n\n  const [onPresentContributeModal] = useModal(\n    <ContributeModal currency={currency} contract={contract} currencyAddress={currencyAddress} />,\n  )\n\n  useEffect(() => {\n    const fetch = async () => {\n      setContributions(new BigNumber(await contract.methods.contributions(account).call()))\n      setClaimedTokens(new BigNumber(await contract.methods.claimedTokens(account).call()))\n      setRefundedTokens(new BigNumber(await contract.methods.refunds(account).call()))\n      setTokensPerBnb(new BigNumber(await contract.methods.tokensPerBnb().call()))\n    }\n\n    if (account) {\n      fetch()\n    }\n  }, [account, contract.methods, pendingTx])\n\n  const claim = async () => {\n    setPendingTx(true)\n    await contract.methods.claimTokens().send({ from: account })\n    setPendingTx(false)\n  }\n\n  const refund = async () => {\n    setPendingTx(true)\n    await contract.methods.claimRefund().send({ from: account })\n    setPendingTx(false)\n  }\n\n  const isFinished = status === 'finished' || finalized\n  const percentOfUserContribution = new BigNumber(contributions).div(raisingAmount).times(100)\n\n  const userClaimed = isFinished && claimedTokens.isGreaterThan(new BigNumber(0))\n  const userRefunded = isFinished && refundedTokens.isGreaterThan(new BigNumber(0))\n\n  const claimableTokens = getBalanceNumber(contributions) * getBalanceNumber(tokensPerBnb)\n\n  const getButtonLabel = () => {\n    if (!isFinished) return 'Contribute'\n\n    if (softCapReached) return 'Claim'\n\n    return 'Refund'\n  }\n\n  const getLabel = () => {\n    if (!isFinished) return `Your contribution (${currency})`\n\n    if (softCapReached) return 'Your tokens to claim'\n\n    return 'Your tokens to refund'\n  }\n\n  const getButtonValue = () => {\n    if (!isFinished) {\n      return getBalanceNumber(contributions, 18).toFixed(4)\n    }\n\n    if (softCapReached) {\n      return userClaimed ? 'Claimed' : claimableTokens.toFixed(4)\n    }\n\n    return userRefunded ? 'Refunded' : claimableTokens.toFixed(4)\n  }\n\n  const getButtonHint = () => {\n    if (!isFinished) return `${percentOfUserContribution.toFixed(5)}% of total`\n\n    if (softCapReached) return `You'll be refunded any excess tokens when you claim`\n\n    return `You'll be refunded all your contributions`\n  }\n\n  const handleOnClick = () => {\n    if (!isFinished) return onPresentContributeModal\n\n    if (softCapReached) return claim\n\n    return refund\n  }\n\n  return (\n    <>\n      <LabelButton\n        disabled={pendingTx || userClaimed || userRefunded}\n        buttonLabel={getButtonLabel()}\n        label={getLabel()}\n        value={getButtonValue()}\n        onClick={handleOnClick()}\n      />\n      <Text fontSize=\"14px\" color=\"primary\">\n        {getButtonHint()}\n      </Text>\n    </>\n  )\n}\n\nexport default IfoCardContribute\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Progress } from '@pancakeswap-libs/uikit'\n\ninterface IfoCardProgressProps {\n  progress: number\n}\n\nconst StyledProgress = styled.div`\n  margin-bottom: 16px;\n`\n\nconst IfoCardProgress: React.FC<IfoCardProgressProps> = ({ progress }) => (\n  <StyledProgress>\n    <Progress primaryStep={progress} />\n  </StyledProgress>\n)\n\nexport default IfoCardProgress\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = seconds\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, Text } from '@pancakeswap-libs/uikit'\nimport { IfoStatus } from 'config/constants/types'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardTimeProps {\n  isLoading: boolean\n  status: IfoStatus\n  secondsUntilStart: number\n  secondsUntilEnd: number\n  finalized: boolean\n}\n\nconst Details = styled.div`\n  align-items: center;\n  display: flex;\n  height: 24px;\n  justify-content: center;\n  margin-bottom: 24px;\n`\n\nconst Countdown = styled.div`\n  color: ${({ theme }) => theme.colors.secondary};\n  font-size: 20px;\n  font-weight: 600;\n  text-align: center;\n`\n\nconst IfoCardTime: React.FC<IfoCardTimeProps> = ({\n  isLoading,\n  status,\n  secondsUntilStart,\n  secondsUntilEnd,\n  finalized,\n}) => {\n  const TranslateString = useI18n()\n  const countdownToUse = status === 'coming_soon' ? secondsUntilStart : secondsUntilEnd\n  const timeUntil = getTimePeriods(countdownToUse)\n  const suffix = status === 'coming_soon' ? 'Start' : 'Finish'\n\n  if (isLoading) {\n    return <Details>{TranslateString(656, 'Loading...')}</Details>\n  }\n\n  if (countdownToUse <= 0) {\n    return (\n      <Details>\n        <Text bold>{TranslateString(999, 'Finished')}</Text>\n      </Details>\n    )\n  }\n\n  return (\n    <Details>\n      <Countdown>{`${timeUntil.days}D, ${timeUntil.hours}H, ${timeUntil.minutes}M Until ${suffix}`}</Countdown>\n    </Details>\n  )\n}\n\nexport default IfoCardTime\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { Card, CardBody, CardRibbon, Flex, Text, Button  } from '@pancakeswap-libs/uikit'\nimport { Ifo, IfoStatus } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport { useIdoContract } from 'hooks/useContract'\nimport UnlockButton from 'components/UnlockButton'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport useBlock from 'hooks/useBlock'\nimport { withStyles } from '@material-ui/core'\nimport IfoCardHeader from './IfoCardHeader'\nimport IfoCardDescription from './IfoCardDescription'\nimport IfoCardDetails from './IfoCardDetails'\nimport IfoCardContribute from './IfoCardContribute'\nimport IfoCardProgress from './IfoCardProgress'\nimport IfoCardTime from './IfoCardTime'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport interface IfoCardProps {\n  ifo: Ifo\n}\n\nconst StyledIfoCard = styled(Card)<{ ifoId: string }>`\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n`\n\nconst StyledProgress = styled.div`\n  margin-bottom: 16px;\n`\n\nconst ActionWrapper = styled.div`\n  margin-top: 24px;\n`\n\nconst StyledLinearProgress = withStyles({\n  barColorPrimary: {\n    backgroundColor: '#5f696e',\n  },\n  bar2Buffer: {\n    backgroundColor: '#b0bec5',\n  },\n  dashedColorPrimary: {\n    backgroundImage: `radial-gradient(#b0bec5 0%, #97a4ab 16%, transparent 42%);`,\n  },\n  root: {\n    borderRadius: 5,\n    height: 14,\n    padding: '0 20px',\n  },\n})(LinearProgress)\n\nconst getStatus = (currentTime: number, startTime: number, endTime: number): IfoStatus | null => {\n  if (currentTime < startTime) {\n    return 'coming_soon'\n  }\n\n  if (currentTime >= startTime && currentTime <= endTime) {\n    return 'live'\n  }\n\n  if (currentTime > endTime) {\n    return 'finished'\n  }\n\n  return null\n}\n\nconst getRibbonComponent = (status: IfoStatus, TranslateString: (translationId: number, fallback: string) => any) => {\n  if (status === 'coming_soon') {\n    return <CardRibbon variantColor=\"textDisabled\" text={TranslateString(999, 'Coming Soon')} />\n  }\n\n  if (status === 'live') {\n    return <CardRibbon variantColor=\"primary\" text={TranslateString(999, 'LIVE NOW!')} />\n  }\n\n  return null\n}\n\nconst IfoCard: React.FC<IfoCardProps> = ({ ifo }) => {\n  const {\n    id,\n    name,\n    subTitle,\n    description,\n    saleAmount,\n    projectSiteUrl,\n    currencyAddress,\n    tokenDecimals,\n    currency,\n    maxContribution,\n    minContribution,\n    token,\n  } = ifo\n\n  const [state, setState] = useState({\n    blocksRemaining: 0,\n    endBlockNum: 0,\n    hardCap: new BigNumber(0),\n    hardCapProgress: 0,\n    isLoading: true,\n    isOpen: null,\n    progress: 0,\n    secondsUntilEnd: 0,\n    secondsUntilStart: 0,\n    softCap: new BigNumber(0),\n    softCapProgress: 0,\n    startBlockNum: 0,\n    status: null,\n    tokensPerBnb: new BigNumber(0),\n    weiRaised: new BigNumber(0),\n    softCapReached: false,\n    finalized: false,\n  })\n  const { account } = useWallet()\n  const presaleContract = useIdoContract(ifo.address[CHAIN_ID])\n\n  const currentBlock = useBlock()\n  const TranslateString = useI18n()\n\n  const Ribbon = getRibbonComponent(state.status, TranslateString)\n\n  useEffect(() => {\n    const fetchProgress = async () => {\n      const [\n        startTime,\n        endTime,\n        softCap,\n        hardCap,\n        tokensPerBnb,\n        weiRaised,\n        isOpen,\n        softCapReached,\n        finalized,\n      ] = await Promise.all([\n        presaleContract.methods.startTime().call(),\n        presaleContract.methods.endTime().call(),\n        presaleContract.methods.softCap().call(),\n        presaleContract.methods.hardCap().call(),\n        presaleContract.methods.tokensPerBnb().call(),\n        presaleContract.methods.weiRaised().call(),\n        presaleContract.methods.isOpen().call(),\n        presaleContract.methods.softCapReached().call(),\n        presaleContract.methods.finalized().call(),\n      ])\n\n      const softCapProgress = (weiRaised / softCap) * 100\n      const hardCapProgress = (weiRaised / hardCap) * 100\n\n      const startBlockNum = parseInt(startTime, 10)\n      const endBlockNum = parseInt(endTime, 10)\n      const blocksRemaining = endBlockNum - currentBlock\n\n      const currentTime = Math.round(Date.now() / 1000)\n\n      // const status = getStatus(currentBlock, startBlockNum, endBlockNum)\n      const status = getStatus(currentTime, startTime, endTime)\n\n      // Calculate the total progress until finished or until start\n      const progress =\n        currentTime > startTime\n          ? ((currentTime - startTime) / (endTime - startTime)) * 100\n          : ((currentTime - endTime) / (startTime - endTime)) * 100\n\n      setState({\n        blocksRemaining,\n        endBlockNum,\n        hardCap,\n        hardCapProgress: hardCapProgress > 100 ? 100 : hardCapProgress,\n        isLoading: false,\n        isOpen,\n        progress,\n        secondsUntilEnd: endTime - currentTime,\n        secondsUntilStart: startTime - currentTime,\n        softCap,\n        softCapProgress: softCapProgress > 100 ? 100 : softCapProgress,\n        startBlockNum,\n        status,\n        tokensPerBnb,\n        weiRaised,\n        softCapReached,\n        finalized,\n      })\n    }\n\n    fetchProgress()\n  }, [currentBlock, presaleContract, setState])\n\n  const isActive = state.status === 'live'\n  const isFinished = state.status === 'finished' || state.finalized\n\n  return (\n    <StyledIfoCard ifoId={id} ribbon={Ribbon} isActive={isActive}>\n      <CardBody>\n        <IfoCardHeader ifoId={id} name={name} subTitle={subTitle} />\n        <IfoCardProgress progress={state.progress} />\n        <IfoCardTime\n          isLoading={state.isLoading}\n          status={state.status}\n          secondsUntilStart={state.secondsUntilStart}\n          secondsUntilEnd={state.secondsUntilEnd}\n          finalized\n        />\n        {(isActive || isFinished) && (\n          <>\n            <Flex justifyContent=\"space-between\" mt=\"30px\">\n              <Text style={{ fontSize: '16px' }}>Price:</Text>\n              <Text bold style={{ fontSize: '16px' }}>\n                1 BNB = {`${new BigNumber(state.tokensPerBnb).div(10 ** tokenDecimals)}`} {ifo.token}\n              </Text>\n            </Flex>\n            <Flex justifyContent=\"space-between\" mt=\"16px\">\n              <Text style={{ fontSize: '16px' }}>BNB raised:</Text>\n              <Text bold style={{ fontSize: '16px' }}>\n                {getFullDisplayBalance(new BigNumber(state.weiRaised))} BNB\n              </Text>\n            </Flex>\n            <Flex justifyContent=\"space-between\" mt=\"16px\">\n              <Text style={{ fontSize: '16px' }}>Soft Cap:</Text>\n              <Text bold style={{ fontSize: '16px' }}>{getBalanceNumber(state.softCap)} BNB</Text>\n            </Flex>\n            <Flex justifyContent=\"space-between\" mt=\"16px\">\n              <Text style={{ fontSize: '16px' }}>Hard Cap:</Text>\n              <Text bold style={{ fontSize: '16px' }}>{getBalanceNumber(state.hardCap)} BNB</Text>\n            </Flex>\n          </>\n        )}\n        <ActionWrapper>        \n          {!account && <UnlockButton fullWidth />}\n          {account && (isActive || !isFinished) && (\n            <StyledProgress>\n              <StyledLinearProgress\n                variant=\"buffer\"\n                value={state.hardCapProgress}\n                valueBuffer={state.softCapProgress}\n              />\n            </StyledProgress>\n          )}\n          {account && (isActive || isFinished) && (\n            <IfoCardContribute\n              address={ifo.address[CHAIN_ID]}\n              currency=\"BNB\"\n              currencyAddress={currencyAddress}\n              contract={presaleContract}\n              status={state.status}\n              finalized={state.finalized}\n              raisingAmount={state.hardCap}\n              softCapReached={state.softCapReached}\n            />\n          )}\n        </ActionWrapper>\n        <IfoCardDetails\n          saleAmount={saleAmount}\n          projectSiteUrl={projectSiteUrl}\n          raisingAmount={state.hardCap}\n          totalAmount={new BigNumber(state.weiRaised)}\n          maxContribution={maxContribution}\n          minContribution={minContribution}\n          currency={currency}\n          token={token}\n        />\n      </CardBody>\n    </StyledIfoCard>\n  )\n}\n\nexport default IfoCard\n","import styled from 'styled-components'\nimport { Heading } from '@pancakeswap-libs/uikit'\n\nconst Title = styled(Heading).attrs({ size: 'lg' })`\n  color: ${({ theme }) => theme.colors.primary};\n  margin-bottom: 16px;\n`\n\nexport default Title\n","import styled from 'styled-components'\n\ninterface IfoCardWrapperProps {\n  isSingle?: boolean\n}\n\nconst IfoCardWrapper = styled.div<IfoCardWrapperProps>`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  height: 750px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: ${({ isSingle }) => `repeat(${isSingle ? 1 : 2}, 1fr)`};\n  }\n`\n\nIfoCardWrapper.defaultProps = {\n  isSingle: false,\n}\n\nexport default IfoCardWrapper\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, Text, Heading, BaseLayout, Button, LinkExternal, Flex, Image } from '@pancakeswap-libs/uikit'\nimport { ifosConfig } from 'config/constants'\nimport { Ifo } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport IfoCard from './components/IfoCard'\nimport Title from './components/Title'\nimport IfoCards from './components/IfoCards'\nimport Countdowns from './components/Countdowns'\n\nconst LaunchIfoCallout = styled(Card)`\n  height: 750px;\n  margin: 0 auto;\n  padding: 32px 0;\n`\n\nconst List = styled.ul`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 40px;\n\n  & > li {\n    line-height: 1.4;\n    margin-bottom: 8px;\n  }\n`\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 50px;\n  margin-bottom: 20px;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    grid-template-columns: 1fr;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: 1fr 1fr;\n  }\n`\n\nconst PresaleCountdown = styled(CardBody)`\n  background: linear-gradient(90deg, #6D38FE 0%, #B760FD 100%);\n  border-radius: 10px;\n`\n\nconst CountdownArea = styled(Flex)`\n  ${({ theme }) => theme.mediaQueries.xs} {\n    flex-direction: column;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n  }\n`\n\n/**\n * Note: currently there should be only 1 active IFO at a time\n */\nconst activeIfo: Ifo[] = ifosConfig.filter((ifo) => ifo.isActive)\n\nconst ActiveIfo = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      {/* <Wrapper>\n        <PresaleCountdown>\n          <CountdownArea alignItems=\"center\">\n            <Text fontSize=\"20px\" color=\"white\" mr=\"20px\">\n              Presale Starts In:\n            </Text>\n            <Countdowns time={10000000000001} />\n          </CountdownArea>\n        </PresaleCountdown>\n      </Wrapper> */}\n      <Wrapper>\n        <IfoCards isSingle>\n          {activeIfo.map((ifo) => (\n            <IfoCard key={ifo.id} ifo={ifo} />\n          ))}\n        </IfoCards>\n        <LaunchIfoCallout>\n          <CardBody>\n            <div>\n              <Title as=\"h2\">{TranslateString(592, 'How to take part')}</Title>\n              <Heading mb=\"16px\">{TranslateString(999, 'Before Pre-Sale')}:</Heading>\n              <List>\n                <li>\n                  {TranslateString(\n                    999,\n                    'Buy BNB, be sure to have it ready in your Web-3 wallet in BSC network. Tutorial',\n                  )}\n                </li>\n                <li>{TranslateString(999, 'Open the Presale link in your Web-3 Browser.')}</li>\n                <li>{TranslateString(999, 'Wait for the Presale to start.')}</li>\n              </List>\n              <Heading mb=\"16px\">{TranslateString(999, 'During Pre-Sale')}:</Heading>\n              <List>\n                <li>\n                  {TranslateString(999, 'While the sale is live, press the Buy button and input the amount of BNB')}\n                </li>\n                <li>{TranslateString(999, 'Confirm the amount of BNB you want to invest')}</li>\n                <li>{TranslateString(999, 'Min amount 1 BNB')}</li>\n                <li>{TranslateString(999, 'Max Amount 12 BNB')}</li>\n              </List>\n              <Heading mb=\"16px\">{TranslateString(999, 'After SoftCap is reached')}:</Heading>\n              <List>\n                <li>{TranslateString(999, '2250 $INFINITY will be distributed to wallets who joined the presale.')}</li>\n              </List>\n              <Heading mb=\"16px\">{TranslateString(999, 'After Pre-Sale')}:</Heading>\n              <List>\n                <li>\n                  {TranslateString(\n                    999,\n                    'Tokens will be vested until the 5th of January 2022, date of the Public Sale and PancakeSwap listing.',\n                  )}\n                </li>\n              </List>\n            </div>\n          </CardBody>\n        </LaunchIfoCallout>\n      </Wrapper>\n    </>\n  )\n}\n\nexport default ActiveIfo\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport Container from 'components/layout/Container'\nimport IfoTabButtons from './components/IfoTabButtons'\nimport Hero from './components/Hero'\nimport CurrentIfo from './CurrentIfo'\nimport PastIfo from './PastIfo'\n\nconst Ifos = () => {\n  const { path } = useRouteMatch()\n\n  return (\n    <>\n      <Hero />\n      <Container>\n        <Route exact path={`${path}`}>\n          <CurrentIfo />\n        </Route>\n      </Container>\n    </>\n  )\n}\n\nexport default Ifos\n"],"sourceRoot":""}